apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: superset
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: superset
    name: superset
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: superset:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/riekrh/superset-openshift
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.6
          namespace: openshift
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
    - generic:
        secret: 7a68939ee7e7c3b7
      type: Generic
    - github:
        secret: 8b21843e41606b61
      type: GitHub
  status:
    lastVersion: 0
- apiVersion: v1
  data:
    SUPERSET_ADM_PWD: 7ujmko0
    SUPERSET_CONFIG_PATH: /etc/superset/superset_config.py
    superset_config.py: |
      import os

      MAPBOX_API_KEY = os.getenv('MAPBOX_API_KEY', '')
      #CACHE_CONFIG = {
      #    'CACHE_TYPE': 'redis',
      #    'CACHE_DEFAULT_TIMEOUT': 300,
      #    'CACHE_KEY_PREFIX': 'superset_',
      #    'CACHE_REDIS_HOST': 'redis',
      #    'CACHE_REDIS_PORT': 6379,
      #    'CACHE_REDIS_DB': 1,
      #    'CACHE_REDIS_URL': 'redis://redis:6379/1'}
      SQLALCHEMY_DATABASE_URI = os.getenv('SUPERSET_SQLALCHEMY_DB_URI','sqlite:////var/lib/superset/superset.db')
      SQLALCHEMY_TRACK_MODIFICATIONS = True
      SECRET_KEY = os.getenv('SUPERSET_SECRET_KEY','thisISaSECRET_1234')
      DATA_DIR = '/var/lib/superset'
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: superset
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: superset
    name: superset
  spec:
    replicas: 1
    selector:
      deploymentconfig: superset
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: superset
          deploymentconfig: superset
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: superset
          image: 172.30.1.1:5000/superset/superset@sha256:672582acf77bd3dab017bd5b06b61d4493698b52e0a59b1866495003cd4aa517
          imagePullPolicy: Always
          name: superset
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/superset
            name: volume-gduxy
          - mountPath: /etc/superset
            name: volume-lh9i4
        initContainers:
        - name: superset-init 
          envFrom:
          - configMapRef:
              name: superset
          image: 172.30.1.1:5000/superset/superset@sha256:672582acf77bd3dab017bd5b06b61d4493698b52e0a59b1866495003cd4aa517
          imagePullPolicy: Always
          command: ['/bin/sh','-c','./superset_init.sh']
          volumeMounts:
          - mountPath: /var/lib/superset
            name: volume-gduxy
          - mountPath: /etc/superset
            name: volume-lh9i4
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: volume-gduxy
          persistentVolumeClaim:
            claimName: superset-data
        - configMap:
            defaultMode: 420
            items:
            - key: superset_config.py
              path: superset_config.py
            name: superset
          name: volume-lh9i4
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - superset
        from:
          kind: ImageStreamTag
          name: superset:latest
          namespace: superset
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
      openshift.io/image.dockerRepositoryCheck: 2018-07-10T15:47:54Z
    creationTimestamp: null
    generation: 2
    labels:
      app: superset
    name: superset
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.30.1.1:5000/superset/superset:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    name: superset-config
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    volumeName: pv0096
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    name: superset-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
    volumeName: pv0089
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: superset
    name: superset
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: superset
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: superset
    name: superset
  spec:
    host: superset-superset.127.0.0.1.nip.io
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: superset
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-07-10T16:26:53Z
        status: "True"
        type: Admitted
      host: superset-superset.127.0.0.1.nip.io
      routerName: router
      wildcardPolicy: None
